/*****************************************************************************
 * This file contains the project scehdule for the funraising project from   *
 * the pitivi team                                                           *
 *****************************************************************************/

/*******************
 *     Macros      *
 *******************/

macro name ["pitivi.fundraising"]
macro fullname ["Pitivi: Open source video edition to the next level"]
macro wp1name ["WP 1: Bug fixing and Quality Assurance"]
macro wp2name ["WP 2: Feature development and performance fixes"]

macro allocate_devs    [allocate mathieu, thibault
                        flags mathieu, thibault]
macro allocate_all     [allocate mathieu, thibault
                        flags mathieu, thibault]
macro allocate_market  [allocate mathieu, thibault
                        flags mathieu, thibault]
macro allocate_design  [allocate mathieu, thibault
                        flags mathieu, thibault]
macro allocate_jeff    [allocate mathieu, thibault
                        flags mathieu, thibault]
macro allocate_mathieu [allocate mathieu
                        flags mathieu]
macro allocate_thib    [allocate thibault
                        flags thibault]

/****************************
 *  Main project definition *
 ****************************/
project ${name} ${fullname}  2014-01-01-0:00--0500 +24m {
  timezone "Europe/Paris"
  timeformat "%Y-%m-%d"
  numberformat "-" "" "," "." 1    # Use US format for numbers
  currencyformat "(" ")" "," "." 0 # Use US financial format for currency values. Don't show cents.
  currency "Euro"

  # You can define multiple scenarios here if you need them.
  scenario plan "Original plan" {
    scenario actual "Actual"
  }

  # Limit working days
  workinghours sat,sun off
}

copyright "Pitivi team: Mathieu Duponchelle, Jean Francois Fortin-tam, Thibault Saunier"

/******************
 *     Flags      *
 ******************/
flags bugtriage
flags pm
flags marketing
flags devel
flags docs
flags important
flags hidden

flags thibault
flags mathieu
flags jeff

/************************
 * Accounts definitions *
 ************************/

# TODO Check how to use that to handle the various amount we could receive, and how we handle them
account cost "Project Cost" {
  account dev "Development"
}
account fundraised_account "Fundraising"
balance cost fundraised_account


/**************************
 * Ressources definitions *
 **************************/

# Public holidays.
vacation "New Year's Day" 2013-01-01
rate 150.0 # Default daily rate

resource team "Pitivi team" {
  resource thibault  "Thibault Saunier" {
    email "tsaunier@gnome.org"
    limits { weeklymax 24h }
    rate 170.0 # Default daily rate
  }

  resource mathieu "Mathieu duponchelle" {
    email "mduponchelle1@gmail.com"
  }

  #resource jeff "Jean Francois Fortin-tam" {
    #email "nekohayo@gmail.com"
  #}
}

/***********************
 * Project definition  *
 ***********************/
task project ${fullname} {
  chargeset dev

  task wp1 ${wp1name} {
    task qa_infrastucture "Maintain and enhance our Quality Assurance infrastucture" {
      ${allocate_thib}

      priority 750
      task daily_build_packages "Set up daily build packages for Fedora, Debian and Ubuntu with cerbero" {
        effort 10d
      }

      task ges_project_launcher "Port our tests to ges-project-launcher and gst-validate" {
        effort 5d
      }

      task dogtails_tests "Set up and clean up dogtails tests on the server" {
        effort 5d
      }

      task clean_up_settup "Clean everything up and make sure it is future proof" {
        effort 5d
      }

      # TODO Find a real hosting server
        # QUESTION: Propose some hosting service to get people's broken projects so we can fix them, and integrate them in our QA tool?
      #
      # => effort + N ?
    }

    task ReimplementRegressions "Reimplement regressions from the 0.15 series" {
      # There are a few features we had in the 0.15 serie that are not back
      # yet, we should make sure that everything that was present at that time is here in 1.0" {
      # FIXME Check why the generated html does not work! https://github.com/taskjuggler/TaskJuggler/issues/124

      task transformation_box "Reimplement the video transformation box" {
        ${allocate_devs}
        effort 10d
      }

      task undo_redo "Reimplement undo redo" {
        ${allocate_devs}
        effort 4d
      }

      task auto_alignment "Reimplement auto alignment feature" {
        ${allocate_devs}
        effort 8d
      }
    }

    task BugFixing "Bug fixing, (represented linearly but it is actually very iterative)" {
      task manual_testing "Test pitivi manually and file more bugs" {
        ${allocate_jeff}
        effort 22d
      }

      task fix_gnl "Fix bugs found in GnonLin" {
        ${allocate_devs}
        effort 12d
      }

      task fix_gst "Fix any bug found in Gstreamer core and its plugins" {
        ${allocate_devs}
        effort 32d
      }

      task fix_ges "Fix any bug found in GStreamer Editing Services" {
        ${allocate_devs}
        effort 22d
      }

      task fix_pitivi_dogtails "Fix and enhance Pitivi Dogtail tests" {
        ${allocate_all}
        effort 12d
      }

      task fix_pitivi "Fix any bug found in PiTiVi" {
        ${allocate_all}
        effort 12d
      }
    }

    task Documentation "Update documentation and examples for GES and Pitivi " {
      priority 10
      task pitivi "Update the user manual with latest features and changes" {
        ${allocate_jeff}
        effort 5d
      }

      task write_pitivi_tutorials "Write pitivi tutorials" {
        ${allocate_devs}
        effort 5d
      }

      task cleanup_ges_api_documentation "Clean and update GES API documentation" {
        ${allocate_devs}
        effort 3d
      }

      task update_ges_examples "Update and clean GES examples" {
        ${allocate_devs}
        effort 5d
      }

      task write_ges_tutorials "Write simple GES tutorials" {
        ${allocate_devs}
        effort 5d
      }
    }

    task Release_1_0 "Release Pitivi 1.0" {

      depends !!wp1.Documentation
      task pre_release "Release 0.99" {
        ${allocate_jeff}
        effort 1d
      }

      task fix_bugs_found "Fix remaining bugs found by the community in 0.99" {
        depends !pre_release
        ${allocate_all}
        effort 15d
      }

      task release "Release the fully functionnal 1.0 version" {
        depends !fix_bugs_found
        ${allocate_all}
        effort 1d
      }
    }
  }

  task wp2 ${wp2name} {
    depends !wp1
    task simple_perfomance_fixes "Profile and fix any 'low hanging' major performance issue" {
      priority 500
      task profile_pitivi "Profile pitivi" {
        ${allocate_all}
        effort 5d
      }

      task fix_perfs_in_ges "Improve perfomances in Gst, GES" {
        depends !profile_pitivi
        ${allocate_all}
        effort 10d
      }
      task fix_perfs_in_pitivi "Improve perfomances in Pitivi" {
        depends !profile_pitivi
        ${allocate_all}
        effort 10d
      }
    }

    task speed_control "Speed control, with frame intepollation" {
      priority 690
      ${allocate_mathieu}

      task cleanup_videorate_patch "Cleanup and get merged current code in GStreamer" {
        ${allocate_mathieu}
        effort 2d
      }

      task implement_audiorate_control "Implement speedrate control for audio" {
        ${allocate_mathieu}
        effort 5d
      }

      task implement_ui_in_pitivi "Implement clean and polished UI for speedcontrol in Pitivi" {
        depends !cleanup_videorate_patch
        depends !implement_audiorate_control
        ${allocate_mathieu}
        effort 10d
      }

      task frame_interpollation "Cleanup and get merged slowmo plugin for GStreamer" {
        depends !implement_ui_in_pitivi
        ${allocate_mathieu}
        effort 15d
      }

      task pitivi_frame_interpolation "Properly handle the slowmo plugin in pitivi" {
        depends !frame_interpollation
        ${allocate_mathieu}
        effort 3d
      }
    }

    task hardware_acceleration "Hardware accelerated decoding and encoding" {
      priority 700
      ${allocate_thib}

      task vaapi "Cleanup and get Vaapi plugins fully usable in Pitivi" {
        task vaapi_in_bad "Cleanup and get VAAPI plugins merged into gst-plugins-bad" {
          ${allocate_thib}
          effort 30d
        }

        task fix_vaapi_for_ges "Fix VAAPI encoder and decoder to play well with GES" {
          depends !vaapi_in_bad
          ${allocate_thib}
          effort 20d
        }
      }

      task vdpau "Cleanup and get VDPAU plugin fully usable in pitivi" {
        depends !vaapi
        task clean_vdpau "Cleanup and make use of latest features of Gst in VDPAU plugin" {
          ${allocate_thib}
          effort 30d
        }

        task fix_vdpau_for_ges "Fix VDPAU encoder and decoder to play well with GES" {
          depends !clean_vdpau
          ${allocate_thib}
          effort 20d
        }
      }
    }

    task title "Implement better UI for titles in Pitivi" {
      ${allocate_all}
      effort 20d
    }

    task title "Implement beziers curve interpolation for keyframes" {
      ${allocate_all}
      effort 10d
    }

    task proxy_editing "Properly finnish proxy editing implementation" {
      priority 510
      task finnish_ges_implementation "Review and cleanup current proxy editing branch in GES" {
        ${allocate_all}
        effort 10d
      }

      task proxy_test  "Implement full test suite for proxy editing in GES" {
        depends !finnish_ges_implementation
        ${allocate_all}
        effort 5d
      }


      task proxy_ui  "Implement proxy editing UI in Pitivi" {
        depends !proxy_test
        ${allocate_all}
        effort 10d
      }
    }

    task edl_formatter "Implement an EDL formatter" {
      priority 520
      ${allocate_all}
      effort 15d
    }

    task colorimetrie "Implement proper interfaces for color correction in Pitivi" {
      priority 550
      ${allocate_all}
      effort 20d
    }

    task windows "Port pitivi on windows" {
      priority 630
      ${allocate_all}

      task port "Compile and run pitivi on windows" {
        effort 40d
      }

      task generate_installer "Generate installer for windows" {
        depends !port
        effort 10d
      }
    }

    task mac "Port pitivi to mac os X" {
      priority 650
      ${allocate_all}

      task port "Compile and run pitivi on mac OS" {
        effort 30d
      }

      task generate_installer "Generate installer for mac OS" {
        depends !port
        effort 10d
      }
    }
  }

  task deliveries "Deliveries" {
    task "Stable working 1.0 Pitivi version" {
      depends !!wp1
    }
    task "Performant, and featureful 2.0 Pitivi version" {
      depends !!wp2
    }
  }
}



/*********************************
 * Now teach how to render that! *
 ********************************/
include "reports.tji"
tagfile "tags"
